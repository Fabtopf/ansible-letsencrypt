- name: "Apply default values"
  set_fact:
    spec: "{{ item | combine(request_defaults, recursive=True, list_merge='keep') }}"

- name: "Generate Let's Encrypt private key for {{ spec.name }}"
  openssl_privatekey:
    path: "{{ letsencrypt.base_directory }}/keys/{{ spec.name }}.key"
    size: 4096
    owner: root
    group: root
    mode: 0700

- name: "Generate Let's Encrypt CSR for {{ spec.name }}"
  openssl_csr:
    path: "{{ letsencrypt.base_directory }}/csrs/{{ spec.name }}.csr"
    privatekey_path: "{{ letsencrypt.base_directory }}/keys/{{ spec.name }}.key"
    owner: root
    group: root
    mode: 0700
    common_name: "{{ spec.subject }}"
    email_address: "{{ spec.acme.email }}"
    subject_alt_name: "{{ spec.alternatives | default(['*.' + spec.subject]) | map('regex_replace', '^', 'DNS:') | list }}"

- name: "Begin Let's Encrypt challenges for {{ spec.name }}"
  register: acme_challenge
  acme_certificate:
    acme_directory: "{{ spec.acme.directory }}"
    acme_version: "{{ spec.acme.version }}"
    account_key_src: "{{ letsencrypt.base_directory }}/{{ letsencrypt.account_key }}"
    account_email: "{{ spec.acme.email }}"
    terms_agreed: 1
    challenge: "dns-01"
    csr: "{{ letsencrypt.base_directory }}/csrs/{{ spec.name }}.csr"
    dest: "{{ letsencrypt.base_directory }}/certs/{{ spec.name }}.crt"
    fullchain_dest: "{{ letsencrypt.base_directory }}/certs/{{ spec.name }}.full.crt"
    remaining_days: 30

- name: "Remove old certificate for {{ spec.name }}"
  when: acme_challenge is changed
  file:
    path: "{{ letsencrypt.base_directory }}/certs/{{ spec.name }}.crt"
    state: absent

- name: "Remove old fullchain certificate for {{ spec.name }}"
  when: acme_challenge is changed
  file:
    path: "{{ letsencrypt.base_directory }}/certs/{{ spec.name }}.full.crt"
    state: absent

- name: "Register Let's Encrypt challenge on Cloudflare for {{ spec.name }}"
  when: acme_challenge is changed
  loop: "{{ acme_challenge.challenge_data_dns | dict2items }}"
  loop_control:
    loop_var: challenge
    label: "{{ challenge.key }}"
  include_tasks: add-dns-entry.yaml

- name: "Await dns propagation for {{ spec.name }}"
  when: acme_challenge is changed
  pause:
    seconds: 15

- name: "Complete Let's Encrypt challenges for {{ spec.name }}"
  when: acme_challenge is changed
  ignore_errors: yes
  acme_certificate:
    acme_directory: "{{ spec.acme.directory }}"
    acme_version: "{{ spec.acme.version }}"
    account_key_src: "{{ letsencrypt.base_directory }}/{{ letsencrypt.account_key }}"
    account_email: "{{ spec.acme.email }}"
    challenge: "dns-01"
    csr: "{{ letsencrypt.base_directory }}/csrs/{{ spec.name }}.csr"
    dest: "{{ letsencrypt.base_directory }}/certs/{{ spec.name }}.crt"
    fullchain_dest: "{{ letsencrypt.base_directory }}/certs/{{ spec.name }}.full.crt"
    data: "{{ acme_challenge }}"

- name: "Remove Let's Encrypt challenge on Cloudflare for {{ spec.name }}"
  when: acme_challenge is changed
  loop: "{{ acme_challenge.challenge_data_dns | dict2items }}"
  loop_control:
    loop_var: challenge
    label: "{{ challenge.key }}"
  include_tasks: remove-dns-entry.yaml
