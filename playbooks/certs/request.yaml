- name: "Remove DNS challeges for {{ challenge.key }}"
  loop: "{{ challenge.value | list }}"
  loop_control:
    loop_var: challenge_data
  cloudflare_dns:
    zone: "{{ domain }}"
    type: TXT
    record: "{{ challenge.key }}"
    value: "{{ challenge_data }}"
    api_token: "{{ lookup('ansible.builtin.file', token_path) }}"
    state: absent
root@control-1:/opt/ansible/playbooks/certs# cat request.yaml
- name: "Generate Let's Encrypt private key for {{ item.domain }}"
  openssl_privatekey:
    path: "{{ letsencrypt.base_directory }}/keys/{{ item.domain }}.key"
    size: 4096
    owner: root
    group: root
    mode: 0700

- name: "Generate Let's Encrypt CSR for {{ item.domain }}"
  openssl_csr:
    path: "{{ letsencrypt.base_directory }}/csrs/{{ item.domain }}.csr"
    privatekey_path: "{{ letsencrypt.base_directory }}/keys/{{ item.domain }}.key"
    owner: root
    group: root
    mode: 0700
    common_name: "{{ item.domain }}"
    email_address: "{{ item.acme.email }}"
    subject_alt_name: "{{ item.subject_alt | default(['*.' + item.domain]) | map('regex_replace', '^', 'DNS:') | list }}"

- name: "Begin Let's Encrypt challenges for {{ item.domain }}"
  register: acme_challenge
  acme_certificate:
    acme_directory: "{{ item.acme.directory }}"
    acme_version: "{{ item.acme.version }}"
    account_key_src: "{{ letsencrypt.base_directory }}/{{ letsencrypt.account_key }}"
    account_email: "{{ item.acme.email }}"
    terms_agreed: 1
    challenge: "dns-01"
    csr: "{{ letsencrypt.base_directory }}/csrs/{{ item.domain }}.csr"
    dest: "{{ letsencrypt.base_directory }}/certs/{{ item.domain }}.crt"
    fullchain_dest: "{{ letsencrypt.base_directory }}/certs/fullchain_{{ item.domain }}.crt"
    remaining_days: 30

- when: acme_challenge is changed
  debug:
    var: acme_challenge

- name: "Remove old certificate for {{ item.domain }}"
  when: acme_challenge is changed
  file:
    path: "{{ letsencrypt.base_directory }}/certs/{{ item.domain }}.crt"
    state: absent

- name: "Remove old fullchain certificate for {{ item.domain }}"
  when: acme_challenge is changed
  file:
    path: "{{ letsencrypt.base_directory }}/certy/fullchain_{{ item.domain }}.crt"
    state: absent

- name: "Register Let's Encrypt challenge on Cloudflare for {{ item.domain }}"
  when: acme_challenge is changed
  loop: "{{ acme_challenge.challenge_data_dns | dict2items }}"
  loop_control:
    loop_var: challenge
    label: "{{ challenge.key }}"
  vars:
    domain: "{{ item.domain }}"
    token_path: "{{ letsencrypt.base_directory + '/' + item.cloudflare_token }}"
  include_tasks: add-dns-entry.yaml

- when: acme_challenge is changed
  pause:
    seconds: 15

- name: "Complete Let's Encrypt challenges for {{ item.domain }}"
  when: acme_challenge is changed
  ignore_errors: yes
  acme_certificate:
    acme_directory: "{{ item.acme.directory }}"
    acme_version: "{{ item.acme.version }}"
    account_key_src: "{{ letsencrypt.base_directory }}/{{ letsencrypt.account_key }}"
    account_email: "{{ item.acme.email }}"
    challenge: "dns-01"
    csr: "{{ letsencrypt.base_directory }}/csrs/{{ item.domain }}.csr"
    dest: "{{ letsencrypt.base_directory }}/certs/{{ item.domain }}.crt"
    fullchain_dest: "{{ letsencrypt.base_directory }}/certs/fullchain_{{ item.domain }}.crt"
    data: "{{ acme_challenge }}"

- name: "Remove Let's Encrypt challenge on Cloudflare for {{ item.domain }}"
  when: acme_challenge is changed
  loop: "{{ acme_challenge.challenge_data_dns | dict2items }}"
  loop_control:
    loop_var: challenge
    label: "{{ challenge.key }}"
  vars:
    domain: "{{ item.domain }}"
    token_path: "{{ letsencrypt.base_directory + '/' + item.cloudflare_token }}"
  include_tasks: remove-dns-entry.yaml
